{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davey Wong\\\\Desktop\\\\class-homework\\\\React-Game\\\\clicky\\\\src\\\\components\\\\ImageContainer.js\";\nimport React, { Component } from \"react\";\nimport images from \"./images\";\nimport Image from \"./Image\";\n\nclass ImageContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageArray: images\n    };\n\n    this.shuffle = arr => {\n      let ceil = arr.length;\n      let ind;\n      let temp;\n\n      while (ceil > 0) {\n        ind = Math.floor(Math.random() * 24);\n        ceil--;\n        temp = arr[ceil];\n        arr[ceil] = arr[ind];\n        arr[ind] = temp;\n      }\n\n      this.setState({\n        imageArray: arr\n      });\n    };\n\n    this.shuffled = e => {\n      e.preventDefault();\n      e.target.attributes.getNamedItem;\n      this.shuffle(images);\n      console.log('shuffled');\n    };\n  }\n\n  //Array of image names maybe saved in state and then updated with map\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Unique Foodie Clicky\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.imageArray.slice(0, 5).map(({\n      id,\n      src,\n      title\n    }) => React.createElement(Image, {\n      onClick: this.shuffled,\n      key: id,\n      id: id,\n      source: src,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.imageArray.slice(5, 10).map(({\n      id,\n      src,\n      title\n    }) => React.createElement(Image, {\n      onClick: this.shuffled,\n      key: id,\n      id: id,\n      source: src,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.imageArray.slice(10, 15).map(({\n      id,\n      src,\n      title\n    }) => React.createElement(Image, {\n      onClick: this.shuffled,\n      key: id,\n      id: id,\n      source: src,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.imageArray.slice(15, 20).map(({\n      id,\n      src,\n      title\n    }) => React.createElement(Image, {\n      onClick: this.shuffled,\n      key: id,\n      id: id,\n      source: src,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.imageArray.slice(20, 25).map(({\n      id,\n      src,\n      title\n    }) => React.createElement(Image, {\n      onClick: this.shuffled,\n      key: id,\n      id: id,\n      source: src,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ImageContainer;","map":{"version":3,"sources":["C:/Users/Davey Wong/Desktop/class-homework/React-Game/clicky/src/components/ImageContainer.js"],"names":["React","Component","images","Image","ImageContainer","state","imageArray","shuffle","arr","ceil","length","ind","temp","Math","floor","random","setState","shuffled","e","preventDefault","target","attributes","getNamedItem","console","log","render","slice","map","id","src","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport images from \"./images\"\r\nimport Image from \"./Image\"\r\nclass ImageContainer extends Component {\r\n\r\n    state = {\r\n        imageArray: images\r\n    };\r\n\r\n    shuffle = arr => {\r\n        let ceil = arr.length;\r\n        let ind;\r\n        let temp;\r\n\r\n        while (ceil > 0) {\r\n            ind = Math.floor(Math.random() * 24);\r\n            ceil--;\r\n            temp = arr[ceil];\r\n            arr[ceil] = arr[ind];\r\n            arr[ind] = temp;\r\n        }\r\n        this.setState({ imageArray: arr })\r\n\r\n    }\r\n\r\n    shuffled = (e) => {\r\n        e.preventDefault();\r\n        e.target.attributes.getNamedItem\r\n        this.shuffle(images);\r\n        console.log('shuffled');\r\n    }\r\n\r\n\r\n\r\n    //Array of image names maybe saved in state and then updated with map\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n\r\n                <div className='row text-center'>\r\n                    <h1> Unique Foodie Clicky</h1>\r\n                </div>\r\n                <div className='row'>\r\n\r\n\r\n\r\n\r\n                    {\r\n                        this.state.imageArray.slice(0, 5).map(({ id, src, title }) => <Image onClick={this.shuffled} key={id} id={id} source={src} alt={title} />\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n\r\n\r\n\r\n\r\n                    {\r\n                        this.state.imageArray.slice(5, 10).map(({ id, src, title }) => <Image onClick={this.shuffled} key={id} id={id} source={src} alt={title} />\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n\r\n\r\n\r\n\r\n                    {\r\n                        this.state.imageArray.slice(10, 15).map(({ id, src, title }) => <Image onClick={this.shuffled} key={id} id={id} source={src} alt={title} />\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n\r\n\r\n\r\n\r\n                    {\r\n                        this.state.imageArray.slice(15, 20).map(({ id, src, title }) => <Image onClick={this.shuffled} key={id} id={id} source={src} alt={title} />\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n\r\n                    {\r\n                        this.state.imageArray.slice(20, 25).map(({ id, src, title }) => <Image onClick={this.shuffled} key={id} id={id} source={src} alt={title} />\r\n                        )\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    };\r\n\r\n}\r\nexport default ImageContainer;"]},"metadata":{},"sourceType":"module"}